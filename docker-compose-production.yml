# docker-compose-production.yml - Versão para produção usando imagens pré-construídas
# Para usar no Portainer após configurar GitHub Actions + Docker Hub
# IMPORTANTE: Substitua "SEU_USUARIO_DOCKERHUB" pelo seu nome de usuário real do Docker Hub

version: '3.8'

services:
  # Serviço de Backend (API Node.js/TypeScript)
  backend:
    image: SEU_USUARIO_DOCKERHUB/expedicao-backend:latest
    container_name: expedicao_backend
    ports:
      - "3001:3001"
    environment:
      # Configurações do banco de dados (usando nomes que o backend espera)
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: delucadiogo
      DB_PASSWORD: Xinxuan99
      DB_NAME: expedicao_db
      # URL alternativa para compatibilidade
      DATABASE_URL: postgres://delucadiogo:Xinxuan99@db:5432/expedicao_db
      PORT: 3001
      # Configurações de segurança (ALTERE EM PRODUÇÃO!)
      JWT_SECRET: minha_chave_super_secreta_2024
      ALLOWED_EMAIL_DOMAINS: oliveira.com.br,empresa.com.br
      # Configurações adicionais
      NODE_ENV: production
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - expedicao_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Serviço de Frontend (Aplicação React com Nginx)
  frontend:
    image: SEU_USUARIO_DOCKERHUB/expedicao-frontend:latest
    container_name: expedicao_frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - expedicao_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Serviço de Banco de Dados (PostgreSQL 17)
  db:
    image: postgres:17-alpine
    container_name: expedicao_db
    environment:
      POSTGRES_DB: expedicao_db
      POSTGRES_USER: delucadiogo
      POSTGRES_PASSWORD: Xinxuan99
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./backend/src/database/migrations/001_initial_schema.sql:/docker-entrypoint-initdb.d/001_initial_schema.sql
      - ./backend/src/database/migrations/002_add_arrival_datetime.sql:/docker-entrypoint-initdb.d/002_add_arrival_datetime.sql
      - ./backend/src/database/migrations/003_add_expedition_observations_column.sql:/docker-entrypoint-initdb.d/003_add_expedition_observations_column.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - expedicao_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U delucadiogo -d expedicao_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  expedicao_network:
    driver: bridge

volumes:
  db_data:
    driver: local 